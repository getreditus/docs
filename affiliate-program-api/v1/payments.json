{
  "openapi": "3.1.0",
  "info": {
    "title": "Reditus API - Payments",
    "description": "API specification for managing payments in Reditus.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.getreditus.com/api"
    }
  ],
  "paths": {
    "/v1/payments": {
      "post": {
        "summary": "Referral Payment",
        "description": "The payments API allows you to add payments for your referrals. If you want to track a one-off payment, just don't specify `subscription_id`, `interval` and `interval_count`.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentRequest" }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation error, rejected/expired referral or partnership terminated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseBadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Referral not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseReferralNotFound"
                }
              }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/v1/payments/{id}": {
      "get": {
        "summary": "Get Payment",
        "description": "Show data for a payment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "description": "Payment id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentResponse" }
              }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "referral_email": {
            "type": "string",
            "description": "**required** if `referral_id` not set - Email of the referral"
          },
          "referral_id": {
            "type": "string",
            "description": "**required** if `referral_email` not set - Reditus id of the referral"
          },
          "amount": {
            "type": "integer",
            "description": "Payment amount (in cents)"
          },
          "currency": {
            "type": "string",
            "description": "Payment currency - (lowercase, i.e. **usd**)"
          },
          "idempotency_key": {
            "type": "string",
            "description": "A unique string to identify this payment. Used to prevent double payments."
          },
          "subscription_id": {
            "type": "string",
            "description": "Should be the id of the subscription on your side. Used to associate subsequent payments to this subscription."
          },
          "interval": {
            "type": "string",
            "description": "Subscription interval ('month'/'year')"
          },
          "interval_count": {
            "type": "integer",
            "description": "Number of intervals the payment is made (default: 1)"
          }
        },
        "required": ["idempotency_key", "amount", "currency"]
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "type": { "type": "string" },
              "attributes": { "$ref": "#/components/schemas/PaymentRequest" }
            }
          }
        }
      },
      "ErrorResponseReferralNotFound": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "details": {
                  "type": "string",
                  "example": "Referral not found"
                }
              }
            }
          }
        }
      },
      "ErrorResponseBadRequest": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "details": {
                  "type": "object",
                  "description": "Field-specific error messages",
                  "additionalProperties": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "example": {
                    "amount": ["must be an integer"],
                    "idempotency_key": ["has already been taken"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
